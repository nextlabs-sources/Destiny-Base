<project name="DAC" default="build">

    <var name="nlbuildroot" value="${basedir}/../../../.." />
    <property name="src.dir"      value="${basedir}/src"/>
    <property name="java.main.src.dir"      value="${src.dir}/java/main"/>
    <property name="java.test.src.dir"      value="${src.dir}/java/test"/>
    <property name="hibernate.src.dir"      value="${src.dir}/hibernate"/>
    <property name="etc.src.dir"      value="${src.dir}/etc"/>
    <property name="jsp.src.dir"      value="${src.dir}/jsp"/>
    <property name="wsdl.src.dir"      value="${src.dir}/wsdl"/>
    <property name="build.webapp" value="${build.root.dir}/server/container/dac"/>
    <property name="build.metainf" value="${build.webapp}/META-INF"/>
    <property name="build.webinf" value="${build.webapp}/WEB-INF"/>
    <property name="build.dest"   value="${build.webinf}/classes"/>
    <property name="build.test.dest"   value="${build.webinf}/testclasses"/>
    <property name="build.gendest" value="${build.root.dir}/server/container/dac/genclasses"/>
    <property name="build.weblib" value="${build.webinf}/lib"/>
    <property name="build.webconf" value="${build.webapp}/WEB-INF/conf"/>
    <property name="doc.dest"     value="${build.root.dir}/server/container/dac/doc"/>
    <property name="server.base.dir" value="${src.root.dir}/server/base/"/>
    <property name="servicesbase.dir" value="com/bluejungle/destiny/"/>
    <property name="servicesbase.nextlabs.dir" value="com/nextlabs/destiny/"/>
    <property name="build.reporter.classes.dir" value="${build.root.dir}/server/apps/inquiryCenter/WEB-INF/classes/" />
    <property name="root.etc.dir" value="${nlbuildroot}/src/etc"/>

	<property file="${nlbuildroot}/src/build-scripts/etc/build.properties" />

	<path id="compile.dac.classpath">
        <path refid="compile.classpath"/>
    	<pathelement path="${build.root.dir}/common-dictionary.jar"/>
    	<pathelement path="${build.root.dir}/common-domain.jar"/>
    	<pathelement path="${build.root.dir}/common-framework.jar"/>
    	<pathelement path="${build.root.dir}/common-pf.jar"/>
    	<pathelement path="${build.root.dir}/dabs-components.jar"/>
    	<pathelement path="${build.root.dir}/dac-types.jar"/>
    	<pathelement path="${build.root.dir}/db-init-tools.jar"/>
    	<pathelement path="${build.root.dir}/dcsf-types.jar"/>
    	<pathelement path="${build.root.dir}/inquiry-manager-shared.jar"/>
    	<pathelement path="${build.root.dir}/management-types.jar"/>
    	<pathelement path="${build.root.dir}/random.jar"/>
    	<pathelement path="${build.root.dir}/secure-session.jar"/>
    	<pathelement path="${build.root.dir}/server-base.jar"/>
    	<pathelement path="${build.root.dir}/server-datasource.jar"/>
    	<pathelement path="${build.root.dir}/server-dcsf.jar"/>
    	<pathelement path="${build.root.dir}/server-dictionary.jar"/>
    	<pathelement path="${build.root.dir}/server-framework.jar"/>
    	<pathelement path="${build.root.dir}/server-pf.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-applicationusers.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-enumerations.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-pf.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-services-impl.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-services.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-types.jar"/>
    	<pathelement path="${build.root.dir}/server-shared-utils.jar"/>
    	<pathelement path="${build.root.dir}/storedResults-shared.jar"/>
        <pathelement path="${postgres.jdbc}"/>
        <pathelement path="${oracle.jdbc}"/>
        <pathelement path="${db2.jdbc}"/>
        <pathelement path="${sqlserver.jdbc}"/>
        <pathelement path="${xlib_jar_dir}/jtds-1.2.2.jar"/>
        <pathelement path="${build.dest}"/>
        <pathelement path="${build.gendest}"/>
        <pathelement path="${xlib_jar_dir}/ehcache-1.1.jar"/>
        
        <fileset dir="${build.root.dir}/dependencies">
            <include name="**/config-client*.jar"/>
            <include name="**/log-manager*.jar"/>
        </fileset>
    </path>

    <path id="compile.dac.test.classpath">
        <path refid="compile.dac.classpath"/>
        <pathelement path="${build.root.dir}/app-framework.jar"/>
        <pathelement path="${build.root.dir}/app-framework-test.jar"/>
        <pathelement path="${build.root.dir}/common-ind.jar"/>
        <pathelement path="${build.root.dir}/common-framework-test.jar"/>
        <pathelement path="${build.root.dir}/dabs-components.jar"/>
        <pathelement path="${build.root.dir}/random.jar"/>
        <pathelement path="${build.root.dir}/server-dcsf-test.jar"/>
        <pathelement path="${build.root.dir}/server-pf-tests.jar"/>
        <pathelement path="${build.root.dir}/server-shared-tests.jar"/>
        <pathelement path="${build.root.dir}/web-framework-test.jar"/>
        <pathelement path="${build.root.dir}/webframework.jar"/>
        <pathelement path="${build.test.dest}"/>
        <pathelement path="${xlib_jar_dir}/commons-collections-3.2.2.jar"/>
        <pathelement path="${xlib_jar_dir}/ldap.jar"/>
        <pathelement path="${xlib_jar_dir}/jsf-api.jar"/>
        <pathelement path="${xlib_jar_dir}/junit-4.3.jar"/>
        <pathelement path="${xlib_jar_dir}/dom4j-2.1.3.jar"/>
        <pathelement path="${xlib_jar_dir}/odmg-3.0.jar"/>
        <pathelement path="${xlib_jar_dir}/cglib-full-2.0.2.jar"/>
        <pathelement path="${xlib_jar_dir}/jta.jar"/>
        <pathelement path="${xlib_jar_dir}/mockobjects-core-0.09.jar"/>
        <pathelement path="${xlib_jar_dir}/mockobjects-jdk1.4-j2ee1.3-0.09.jar"/>
    </path>

    <target name="build" depends="compile, setup-webapp, jar, setup-war">
    </target>

    <target name="compile" depends="pre-build">
        <javac srcdir="${java.main.src.dir}" destdir="${build.dest}" excludes="**/*Alert*.java" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" bootclasspath="${compile.bootclasspath}" includeantruntime="false">
            <classpath refid="compile.dac.classpath"/>
        </javac>
        <!--javac srcdir="${java.test.src.dir}" destdir="${build.test.dest}" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" bootclasspath="${compile.bootclasspath}"-->
            <!-- FIXME unit test is writen in Junit 4 -->
            <!--exclude name = "com/nextlabs/destiny/container/dac/datasync/DataSync*" />
            
            <classpath refid="compile.dac.test.classpath"/>
        </javac-->
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${build.root.dir}/dac-classes.jar">
            <fileset dir="${build.dest}">
                <include name="**/security/**/*.class"/>
                <include name="**/security/**/*.hbm.xml"/>
            </fileset>
        </jar>
        <jar destfile="${build.root.dir}/dac-test-classes.jar">
            <fileset dir="${build.test.dest}"/>
        </jar>
        <jar destfile="${build.root.dir}/dac-dataSync.jar">
            <fileset dir="${build.dest}">
                <include name="com/nextlabs/destiny/container/dac/datasync/**"/>
            </fileset>
        </jar>
    </target>

    <target name="pre-build">
        <mkdir dir="${build.dest}"/>
        <mkdir dir="${build.test.dest}"/>
        <mkdir dir="${build.gendest}"/>
    </target>

    <target name="setup-datasources">
        <mkdir dir="${build.weblib}"/>
        <copy toDir="${build.weblib}" failonerror="true">
            <fileset refid="hibernate.lib"/>
        </copy>
        <copy file="${xlib_jar_dir}/hibernate2.jar" todir="${build.weblib}" failonerror="true"/>

        <!-- Copy datasource information -->
        <copy file="${server.base.dir}/resource/main/common.repository.properties" todir="${build.webconf}" failonerror="true"/>
        <copy file="${hibernate.src.dir}/management.repository.xml" todir="${build.webconf}" failonerror="true"/>
        <copy file="${hibernate.src.dir}/activity.repository.xml" todir="${build.webconf}" failonerror="true"/>
        <copy file="${hibernate.src.dir}/policyframework.repository.xml" todir="${build.webconf}" failonerror="true"/>
        <copy file="${hibernate.src.dir}/dictionary.repository.xml" todir="${build.webconf}" failonerror="true"/>
        <copy todir="${build.dest}" failonerror="true">
            <fileset dir="${hibernate.src.dir}">
                <include name="**/*"/>
                <exclude name="*" />
             </fileset>
        </copy>
    </target>

    <target name="setup-webapp" depends="setup-datasources">
        <mkdir dir="${build.root.dir}/work"/>
        <mkdir dir="${build.root.dir}/webapps"/>
        <copy todir="${build.webinf}/services">
            <fileset dir="${gen.dir}/apps/dac/services" includes="**"/>
        </copy>
        <copy todir="${build.webapp}/WEB-INF/modules" failonerror="true" flatten="true">
            <fileset dir="${xlib_jar_dir}">
                <include name="addressing-1.8.0.mar"/>
                <include name="axis2-jaxws-mar-1.8.0.mar"/>
                <include name="mex-1.8.0.mar"/>
                <include name="mtompolicy-1.8.0.mar"/>
                <include name="ping-1.8.0.mar"/>
                <include name="scripting-1.8.0.mar"/>
                <include name="soapmonitor-1.8.0.mar"/>
            </fileset>
            <fileset dir="${build.root.dir}">
                <include name="authentication.mar"/>
            </fileset>
        </copy>
        <copy todir="${build.weblib}" failonerror="true" flatten="true">
            <fileset dir="${build.root.dir}">
            	<include name="agent-types.jar"/>
            	<include name="common-dictionary.jar"/>
            	<include name="common-domain-types.jar"/>
            	<include name="common-domain.jar"/>
            	<include name="common-framework-types.jar"/>
            	<include name="common-framework.jar"/>
            	<include name="common-ind.jar"/>
            	<include name="common-pf.jar"/>
            	<include name="common-version-impl.jar"/>
            	<include name="crypt.jar"/>
            	<include name="dac-services.jar"/>
            	<include name="dac-types.jar"/>
            	<include name="db-init-tools.jar"/>
            	<include name="dcsf-types.jar"/>
            	<include name="deployment-types.jar"/>
            	<include name="inquiry-manager-shared.jar"/>
            	<include name="log-types.jar"/>
            	<include name="management-types.jar"/>
            	<include name="messages.jar"/>
            	<include name="policy-types.jar"/>
            	<include name="secure-session.jar"/>
            	<include name="server-axis-security.jar"/>
            	<include name="server-datasource.jar"/>
            	<include name="server-dcsf.jar"/>
            	<include name="server-dictionary.jar"/>
            	<include name="server-framework.jar"/>
            	<include name="server-pf.jar"/>
            	<include name="server-shared-applicationusers.jar"/>
            	<include name="server-shared-pf.jar"/>
            	<include name="server-shared-services-impl.jar"/>
            	<include name="server-shared-services.jar"/>
            	<include name="server-shared-types.jar"/>
            	<include name="server-shared-utils.jar"/>
            	<include name="storedResults-shared.jar"/>
            	<include name="version.jar"/>
                
				<include name="dependencies/config-client*.jar"/>
				<include name="dependencies/log-manager*.jar"/>
            </fileset>
            <resources refid="axis.jars"/>
            <fileset refid="xerces.jars"/>
        </copy>

        <copy file="${xlib_jar_dir}/mail-1.4.jar" todir="${build.weblib}" failonerror="true"/>
        <copy file="${xlib_jar_dir}/activation-1.1.jar" todir="${build.weblib}" failonerror="true"/>

        <copy file="${antlr.jar}" todir="${build.weblib}" failonerror="true"/>

        <copy file="${xlib_jar_dir}/ldap.jar" todir="${build.weblib}" failonerror="true"/>

        <!-- Copy the EHCACHE jar -->
        <copy file="${xlib_jar_dir}/ehcache-1.1.jar" todir="${build.weblib}" failonerror="true"/>
        
        <!-- For Md5 Digests -->
        <copy file="${xlib_jar_dir}/commons-codec-1.15.jar" todir="${build.weblib}" failonerror="true"/>

        <!-- Logging and logging config files -->
        <copy file="${xlib_jar_dir}/jcl-over-slf4j-1.7.28.jar" todir="${build.weblib}" failonerror="true"/>
        <copy todir="${build.weblib}" failonerror="true" flatten="true">
            <fileset dir="${xlib_jar_dir}/dependencies">
                <include name="*.jar"/>
            </fileset>
        </copy>
        
        <copy file="${root.etc.dir}/log4j2-template.xml" tofile="${build.webinf}/log4j2.xml" failonerror="true"/>
        <replace file="${build.webinf}/log4j2.xml">
            <replacefilter token="@@appname@@" value="dac"/>
        </replace>
        
        <copy file="${etc.src.dir}/web.xml" todir="${build.webinf}" failonerror="true"/>
        <copy file="${etc.src.dir}/axis2.xml" todir="${build.webinf}/conf" failonerror="true"/>
        <copy file="${etc.src.dir}/index.html" todir="${build.webapp}" failonerror="true"/>
        <copy file="${etc.src.dir}/ehcache.xml" todir="${build.dest}" failonerror="true"/>

        <!-- Copy empty axis config file -->
        <copy file="${wsdd.template.dir}/server-config.wsdd" todir="${build.webinf}" failonerror="true"/>

        <!-- Added Inquiry Alert Service to Server WSDD -->
        <!-- <java failonerror="true" classname="org.apache.axis.utils.Admin" dir="${build.webinf}" fork="true">
            <arg value="server"/>
            <arg value="${public.gen.dir}/${servicesbase.dir}/services/inquiry_alert/v1/deploy-InquiryAlertService.wsdd"/>
            <classpath refid="compile.dac.classpath"/>
        </java> -->

    </target>

    <target name="setup-war">
         <war destfile="${war.dir}/dac.war" basedir="${build.webapp}" webxml="${build.webinf}/web.xml" excludes="genclasses/**/*.*, WEB-INF/testclasses/**/*.*"/>
    </target>

    <target name="test-standalone" description="Runs the standalone test suite">
        <junit printsummary="withOutAndErr" showoutput="yes" haltonfailure="${junit.haltonfailure}" failureproperty="junit.fail" fork="true">
            <formatter type="xml"/>
            <sysproperty key="build.root.dir" value="${build.root.dir}" />
            <test name="com.bluejungle.destiny.container.dac.DACComponentsTestSuite" todir="${log.dir}/tests"/>
            <classpath>
                <path refid="compile.dac.test.classpath"/>
                <pathelement path="${build.root.dir}/crypt.jar"/>
                <pathelement path="${antlr.jar}"/>
                <pathelement path="${xlib_jar_dir}/commons-digester-2.1.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-beanutils-1.9.4.jar"/>
            </classpath>
        </junit>
    </target>

    <target name="tests" description="Runs the test suite with servers enabled">
        <!-- Most other junit tests are forked.  This one isn't because it leads to a corrupt XML junit report.  The reason others are forked, is due to the excessive memory utilization and eventually OutOfMemoryError that occurs in the initial VM in which ANT runs.  Changing just this one to not fork does not have a large effect on the memory problem -->
        <!--
        <junit printsummary="withOutAndErr" showoutput="yes" haltonfailure="${junit.haltonfailure}" failureproperty="junit.fail" fork="false">
            <formatter type="xml"/>
            <sysproperty key="build.root.dir" value="${build.root.dir}" />
            <test name="com.bluejungle.destiny.bindings.report.v1.ReportServiceTestSuite" todir="${log.dir}/tests"/>
            <classpath>
                <path refid="compile.dac.test.classpath"/>
                <pathelement path="${build.root.dir}/client-security-config.jar"/>
                <pathelement path="${build.root.dir}/crypt.jar"/>
                <pathelement path="${build.reporter.classes.dir}"/>
                <pathelement path="${xlib_jar_dir}/commons-digester.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-beanutils.jar"/>
            </classpath>
        </junit>
        -->
    </target>

    <target name="wsdl-generate">
        <!-- Takes care of the inquiry alert service -->
        <!--
            trustedCallers="DCC App"
            userAuthRequired="true"
        -->
        <delete dir="${public.gen.dir}/resources" failonerror="false"/>
        <java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
            <classpath refid="compile.classpath"/>
            <arg value="--all-ports"/>
            <arg value="--databinding-method"/>
            <arg value="adb"/>
            <arg value="--generate-all"/>
            <arg value="--namespace2package"/>
            <arg value="http://bluejungle.com/destiny/services/inquiry_alert/v1=com.bluejungle.destiny.services.inquiry_alert.v1,http://bluejungle.com/destiny/bindings/inquiry_alert/v1=com.bluejungle.destiny.bindings.inquiry_alert.v1,http://bluejungle.com/destiny/interfaces/inquiry_alert/v1=com.bluejungle.destiny.interfaces.inquiry_alert.v1,http://bluejungle.com/destiny/types/inquiry_alert/v1=com.bluejungle.destiny.types.inquiry_alert.v1,http://bluejungle.com/destiny/types/inquiry_alert_log/v1=com.bluejungle.destiny.types.inquiry_alert_log.v1,http://bluejungle.com/destiny/types/messaging/v1=com.bluejungle.destiny.types.messaging.v1,http://bluejungle.com/destiny/types/basic/v1=com.bluejungle.destiny.types.basic.v1"/>
            <arg value="--output"/>
            <arg value="${public.gen.dir}"/>
            <arg value="--server-side"/>
            <arg value="--serverside-interface"/>
            <arg value="--service-description"/>
            <arg value="--unwrap-params"/>
            <arg value="--test-case"/>
            <arg value="-sin"/>
            <arg value="InquiryAlertServiceIF"/>
            <arg value="-uri"/>
            <arg value="${wsdl.src.dir}/${servicesbase.dir}/services/InquiryAlertService.v1.wsdl"/>
        </java>
        <replaceregexp file="${public.gen.dir}/resources/services.xml"
                       match="&lt;parameter name=&quot;ServiceClass&quot;&gt;.*&lt;\/parameter&gt;"
                       replace="&lt;parameter name=&quot;ServiceClass&quot;&gt;com.bluejungle.destiny.container.dac.InquiryAlertServiceV1Impl&lt;/parameter&gt;"
                       byline="true"/>


        <!-- Takes care of the Report service -->
        <!--
            trustedCallers="DCC APP"
            userAuthRequired="true"
            clientApplication="Inquiry Center"
        -->
        <delete dir="${public.gen.dir}/resources" failonerror="false"/>
    	<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
    		<classpath refid="compile.classpath"/>
			<arg value="--all-ports" />
			<arg value="--databinding-method" />
			<arg value="adb" />
			<arg value="--generate-all" />
			<arg value="--namespace2package" />
			<arg value="http://bluejungle.com/destiny/services/report/v1=com.bluejungle.destiny.services.report.v1,http://bluejungle.com/destiny/bindings/report/v1=com.bluejungle.destiny.bindings.report.v1,http://bluejungle.com/destiny/interfaces/report/v1=com.bluejungle.destiny.interfaces.report.v1,http://bluejungle.com/destiny/types/report/v1=com.bluejungle.destiny.types.report.v1,http://bluejungle.com/destiny/types/basic/v1=package=com.bluejungle.destiny.types.basic.v1" />
			<arg value="--output" />
			<arg value="${public.gen.dir}" />
			<arg value="--package"/>
			<arg value="com.bluejungle.destiny.interfaces.report.v1"/>
			<arg value="--server-side" />
			<arg value="--serverside-interface" />
			<arg value="--service-description" />
			<arg value="--test-case" />
			<arg value="--unwrap-params" />
			<arg value="-sin" />
			<arg value="ComponentLookupIF" />
			<arg value="-uri" />
			<arg value="${wsdl.src.dir}/${servicesbase.dir}/services/ComponentLookupService.v1.wsdl" />
		</java>
        <replaceregexp file="${public.gen.dir}/resources/services.xml"
                       match="&lt;parameter name=&quot;ServiceClass&quot;&gt;.*&lt;\/parameter&gt;"
                       replace="&lt;parameter name=&quot;ServiceClass&quot;&gt;com.bluejungle.destiny.bindings.report.v1.ComponentLookupIFBindingImpl&lt;/parameter&gt;"
                       byline="true"/>
        <move todir="${gen.dir}/apps/dac/services/ComponentLookupService/META-INF/">
            <fileset dir="${public.gen.dir}/resources/"/>
        </move>

        <delete dir="${public.gen.dir}/resources" failonerror="false"/>
		<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="compile.classpath"/>
			<arg value="--all-ports" />
			<arg value="--databinding-method" />
			<arg value="adb" />
			<arg value="--generate-all" />
			<arg value="--namespace2package" />
			<arg value="http://bluejungle.com/destiny/services/report/v1=com.bluejungle.destiny.services.report.v1,http://bluejungle.com/destiny/bindings/report/v1=com.bluejungle.destiny.bindings.report.v1,http://bluejungle.com/destiny/interfaces/report/v1=com.bluejungle.destiny.interfaces.report.v1,http://bluejungle.com/destiny/types/report/v1=com.bluejungle.destiny.types.report.v1,http://bluejungle.com/destiny/types/basic/v1=package=com.bluejungle.destiny.types.basic.v1" />
			<arg value="--output" />
			<arg value="${public.gen.dir}" />
			<arg value="--package"/>
			<arg value="com.bluejungle.destiny.interfaces.report.v1"/>
			<arg value="--server-side" />
			<arg value="--serverside-interface" />
			<arg value="--service-description" />
			<arg value="--test-case" />
			<arg value="--unwrap-params" />
			<arg value="-sin" />
			<arg value="ReportExecutionIF" />
			<arg value="-uri" />
			<arg value="${wsdl.src.dir}/${servicesbase.dir}/services/ReportExecutionService.v1.wsdl" />
		</java>
        <replaceregexp file="${public.gen.dir}/resources/services.xml"
                       match="&lt;parameter name=&quot;ServiceClass&quot;&gt;.*&lt;\/parameter&gt;"
                       replace="&lt;parameter name=&quot;ServiceClass&quot;&gt;com.bluejungle.destiny.bindings.report.v1.ReportExecutionIFBindingImpl&lt;/parameter&gt;"
                       byline="true"/>
        <move todir="${gen.dir}/apps/dac/services/ReportExecutionService/META-INF/">
            <fileset dir="${public.gen.dir}/resources/"/>
        </move>

        <delete dir="${public.gen.dir}/resources" failonerror="false"/>
		<java classname="org.apache.axis2.wsdl.WSDL2Java" fork="true">
			<classpath refid="compile.classpath"/>
			<arg value="--all-ports" />
			<arg value="--databinding-method" />
			<arg value="adb" />
			<arg value="--generate-all" />
			<arg value="--namespace2package" />
			<arg value="http://bluejungle.com/destiny/services/report/v1=com.bluejungle.destiny.services.report.v1,http://bluejungle.com/destiny/bindings/report/v1=com.bluejungle.destiny.bindings.report.v1,http://bluejungle.com/destiny/interfaces/report/v1=com.bluejungle.destiny.interfaces.report.v1,http://bluejungle.com/destiny/types/report/v1=com.bluejungle.destiny.types.report.v1,http://bluejungle.com/destiny/types/basic/v1=package=com.bluejungle.destiny.types.basic.v1" />
			<arg value="--output" />
			<arg value="${public.gen.dir}" />
			<arg value="--package"/>
			<arg value="com.bluejungle.destiny.interfaces.report.v1"/>
			<arg value="--server-side" />
			<arg value="--serverside-interface" />
			<arg value="--service-description" />
			<arg value="--test-case" />
			<arg value="--unwrap-params" />
			<arg value="-sin" />
			<arg value="ReportLibraryIF" />
			<arg value="-uri" />
			<arg value="${wsdl.src.dir}/${servicesbase.dir}/services/ReportLibraryService.v1.wsdl" />
		</java>
        <replaceregexp file="${public.gen.dir}/resources/services.xml"
                       match="&lt;parameter name=&quot;ServiceClass&quot;&gt;.*&lt;\/parameter&gt;"
                       replace="&lt;parameter name=&quot;ServiceClass&quot;&gt;com.bluejungle.destiny.bindings.report.v1.ReportLibraryIFBindingImpl&lt;/parameter&gt;"
                       byline="true"/>
        <move todir="${gen.dir}/apps/dac/services/ReportLibraryService/META-INF/">
            <fileset dir="${public.gen.dir}/resources/"/>
        </move>
    	
    	<!-- Manual copy the ExtensionMapper.java to overwrite the generated copy -->
    	<copy file="${src.dir}/ExtensionMapper.java" todir="${gen.dir}/src/com/bluejungle/destiny/services/report/v1" overwrite="true" failonerror="true"/>

    </target>

    <target name="wsdl-compile" depends="pre-build">  <!-- FIX ME - Pre-build does more than it needs to here -->
        <javac srcdir="${public.gen.dir}/src" destdir="${build.gendest}" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" bootclasspath="${compile.bootclasspath}" includeantruntime="false">
            <classpath refid="compile.classpath"/>
            <include name="com/**/*.java"/>
        </javac>
    </target>

    <target name="wsdl-jar">
        <jar destfile="${build.root.dir}/dac-services.jar">
            <fileset dir="${build.gendest}">
                <include name="${servicesbase.dir}/services/**/*.class"/>
                <include name="${servicesbase.dir}/bindings/**/*.class"/>
                <include name="${servicesbase.dir}/interfaces/**/*.class"/>
                <exclude name="${servicesbase.dir}/services/**/*TestCase.class"/>
            </fileset>
        </jar>
        <jar destfile="${build.root.dir}/dac-types.jar">
            <fileset dir="${build.gendest}">
                <include name="${servicesbase.dir}/types/**/*.class"/>
                <include name="${servicesbase.nextlabs.dir}/types/**/*.class"/>
            </fileset>
        </jar>
    </target>
</project>
