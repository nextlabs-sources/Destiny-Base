<project name="build_compile" default="all" basedir=".">

    <property name="nlbuildroot" value="${basedir}/../../../../../../.." />
    <property name="war.dir" value="${nlbuildroot}/build/run/server/apps"/>

    <!-- Property file loading -->
    <property file="${nlbuildroot}/src/build-scripts/etc/build.properties" />
    <property file="${basedir}/build.properties" />
    <property environment="env" />

    <!-- properties -->
    <property name="src_dir" location="${rest.api.root}/src" />
    <property name="test_dir" location="${rest.api.root}/test" />
    <property name="web_content_dir" location="${rest.api.root}/WebContent" />
    <property name="build_dir" location="${rest.api.root}/build" />
    <property name="classes_dir" value="${build_dir}/classes" />

    <property name="test_classes_dir" value="${build_dir}/classes_test" />
    <property name="package_name_test" value="${package_name}Test" />
    <property name="tests_report_dir" value="${build_dir}/test_report" />


    <!-- Global tasks -->
    <tstamp>
        <format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
        <format property="build_date" pattern="yyyMMdHHmm" />
    </tstamp>

    <!-- Dump properties -->
    <echoproperties />
    <echo message="build version = ${build_version}" />
    <echo message="time = ${local.now}" />
    <echo message="time = ${build_date}" />

    <path id="build.classpath">
       <fileset dir="${xlib_dir}/jar" includes="httpclient-4.5.13.jar" />
       <fileset dir="${xlib_dir}/jar" includes="httpcore-4.4.11.jar" />
       <fileset dir="${xlib_dir}/jar" includes="commons-lang3-3.11.jar" />
       <fileset dir="${xlib_dir}/jar" includes="*.jar" /> 
       <fileset dir="${build.root.dir}" includes="agent-controlmanager.jar"/>
       <fileset dir="${build.root.dir}" includes="common-framework.jar"/>
       <fileset dir="${build.root.dir}" includes="common-pf.jar"/>
       <fileset dir="${build.root.dir}" includes="client-pf.jar"/>
    </path>
    
    <path id="test.classpath">
        <fileset dir="${xlib_dir}/jar" includes="*.jar" />
    </path>
    
    <path id="junit.test.classpath">
        <fileset dir="${build.root.dir}" includes="agent-controlmanager.jar"/>
        <fileset dir="${build.root.dir}" includes="common-framework.jar"/>
        <fileset dir="${build.root.dir}" includes="common-pf.jar"/>
    </path>

    
    <echo message="INFO: Dump properties and class path setting completed" />

    <!-- Sanity checks -->
    <fail message="nlbuildroot is not set" unless="nlbuildroot" />
    <fail message="nlbuildroot is empty">
        <condition>
            <equals arg1="${nlbuildroot}" arg2="" trim="true" />
        </condition>
    </fail>
    <available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
    <fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

    <echo message="INFO: Sanity check completed (no error)" />


    <!-- Targets -->
    <target name="all" description="Default for all" depends="clean, compile, test" />

    <target name="clean" description="Delete all build artifacts" depends="">
        <delete includeemptydirs="true" dir="${build_dir}" />
    </target>

    <target name="compile" description="Compile the project" depends="clean">
        <mkdir dir="${classes_dir}" />

        <javac srcdir="${src_dir}" destdir="${classes_dir}" debug="${compile.debug}" includeantruntime="false">
            <classpath refid="build.classpath" />
            <include name="**/*.java" />
            <exclude name="**/*Test.java" />
        </javac>

        
        <jar destfile="${build_dir}/${package_name}.jar" basedir="${classes_dir}">
            <manifest>
                <attribute name="Java-Version" value="${java.version}" />
                <attribute name="Implementation-Vendor" value="NextLabs, Inc." />
                <attribute name="Implementation-Title" value="${product_name}" />
                <attribute name="Implementation-Version" value="${build_date} (${build_number})" />
                <attribute name="Implementation-Time" value="${local.now}- [Amila Silva]" />
            </manifest>
        </jar>

        <mkdir dir="${build.root.dir}/rest-api"/>

        <copy todir="${build.root.dir}/rest-api" overwrite="true">
            <fileset file="${build_dir}/${package_name}.jar"/>
            <fileset file="${web_content_dir}/WEB-INF/rest-api-connector.properties"/>
        </copy>

        <copy file="${web_content_dir}/WEB-INF/help_${saas_or_onprem}.html" tofile="${build.root.dir}/rest-api/help.html"/>
    </target>

    <target name="compile-test" description="Compile the Testing code" depends="compile">
        <mkdir dir="${test_classes_dir}" />
        <javac srcdir="${test_dir}" destdir="${test_classes_dir}" debug="${compile.debug}" includeantruntime="false">
            <classpath refid="build.classpath" />
            <classpath refid="test.classpath" />
            <classpath location="${build_dir}/${package_name}.jar" />
            <include name="**/nextlabs/evaluationconnector/test/**/*.java" />
        </javac>
        <jar destfile="${build_dir}/${package_name_test}.jar" basedir="${test_classes_dir}">
            <manifest>
                <attribute name="Java-Version" value="${java.version}" />
                <attribute name="Implementation-Vendor" value="NextLabs, Inc." />
                <attribute name="Implementation-Title" value="${product_name}" />
                <attribute name="Implementation-Version" value="${build_version} (${build_number})" />
                <attribute name="Implementation-Time" value="${local.now}" />
            </manifest>
        </jar>
    </target>

    <target name="test" depends="compile-test">
<!--         <mkdir dir="${tests_report_dir}"/> -->

<!--         <junit printsummary="yes" haltonfailure="no"> -->
<!--             <classpath refid="junit.test.classpath"/> -->
<!--             <classpath> -->
<!--                 <pathelement location="${build_dir}/${package_name}.jar"/> -->
<!--                 <pathelement location="${build_dir}/${package_name_test}.jar"/> -->
<!--             </classpath> -->

<!--             <formatter type="plain"/> -->

<!--             <batchtest fork="yes" todir="${tests_report_dir}"> -->
<!--                 <fileset dir="${test_dir}"> -->
<!--                     <include name="**/*Test.java"/> -->
<!--                 </fileset> -->
<!--             </batchtest> -->

<!--         </junit> -->
    </target>
</project>
