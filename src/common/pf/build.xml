<project name="common-pf" default="build">

	<var name="nlbuildroot" value="${basedir}/../../.." />
	<property name="common.build.script.dir" value="${nlbuildroot}/build_scripts" />

	<!-- Load build properties -->
    <property file="${basedir}/build.properties" />
	<property name="java.main.src.dir"   value="${basedir}/src/java/main"/>
    <property name="java.test.src.dir"   value="${basedir}/src/java/test"/>

    <import file="${common.build.script.dir}/java_build.xml" />
    <import file="${common.build.script.dir}/wsdl_build.xml" />
    <import file="${common.build.script.dir}/obfuscate_build.xml" />
	
	<path id="xlib.classpath">
		<fileset dir="${build.root.dir}/../xlib/jar">
			<include name="**/*.jar" />
		</fileset>
	 </path>

	<property file="${nlbuildroot}/src/build-scripts/etc/build.properties" />

    <property name="initial.jar.name" value="${build.root.dir}/orig-common-pf.jar"/>
    <property name="final.jar.name" value="${build.root.dir}/common-pf.jar"/>
    <property name="obfuscation.jars" value="&lt;jar in=&quot;${initial.jar.name}&quot; out=&quot;${final.jar.name}&quot;/&gt;"/>
    
	<target name="init" depends="java_build.init, wsdl_build.init, obfuscate_build.init" />

    <target name="pre_compile" depends="resolve, wsdl_build.pre_compile, wsdl, antlr" />

    <target name="wsdl" unless="wsdl_build_uptodate">
        <mkdir dir="${src.main.gen.dir}" />
        <echo message="XSD2Java ${src.main.gen.dir}"/>
    	<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
		  	<classpath refid="xlib.classpath"/>
		  	<arg file="${src.wsdl.dir}/../xsd/com/bluejungle/pf/destiny/services/types/PolicyEditorFaults.xsd"/>
		  	<arg file="${src.main.gen.dir}"/>
		 </java>
		<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
		  	<classpath refid="xlib.classpath"/>
			<arg file="${src.wsdl.dir}/../xsd/com/bluejungle/pf/destiny/services/types/PolicyEditorTypes.xsd"/>
		  	<arg file="${src.main.gen.dir}"/>
		 </java>
    	<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
		  	<classpath refid="xlib.classpath"/>
			<arg file="${src.wsdl.dir}/../xsd/com/bluejungle/pf/destiny/services/types/PolicyTypes.xsd"/>
		  	<arg file="${src.main.gen.dir}"/>
		 </java>
    	<echo message="Completed XSD2Java"/>
    </target>  

    <target name="antlr">
        <dependset>
            <srcfilelist dir="${src.main.dir}/com/bluejungle/pf/destiny/parser/" files="pql.g,pqltree.g" />
            <targetfileset dir="${src.main.gen.dir}" includes="*" />
        </dependset>

	    <mkdir dir="${src.main.gen.dir}/com/bluejungle/pf/destiny/parser" />
        <antlr target="${src.main.dir}/com/bluejungle/pf/destiny/parser/pql.g" outputdirectory="${src.main.gen.dir}/com/bluejungle/pf/destiny/parser">
		    <classpath>
			    <fileset dir="${nlbuildroot}/xlib/jar">
				    <include name="*.jar" />
			    </fileset>
		    </classpath>
	    </antlr>
        <antlr target="${src.main.dir}/com/bluejungle/pf/destiny/parser/pqltree.g" outputdirectory="${src.main.gen.dir}/com/bluejungle/pf/destiny/parser">
		    <classpath>
			    <fileset dir="${nlbuildroot}/xlib/jar">
				    <include name="*.jar" />
			    </fileset>
		    </classpath>
        </antlr>
    </target>

    <target name="compile" depends="pre_compile">
        <mkdir dir="${build.gen.classes.dir}" />

        <javac srcdir="${src.main.gen.dir}" sourcepath="${src.main.dir}" destdir="${build.gen.classes.dir}" fork="true" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" executable="${compile.executable}" bootclasspath="${compile.bootclasspath}" includeantruntime="false">
            <classpath>
                <fileset dir="${build.root.dir}">
                    <include name="common-domain.jar"/>
                    <include name="common-framework.jar"/>
                </fileset>
                <fileset dir="${nlbuildroot}/xlib/jar">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>
        
        <mkdir dir="${build.main.classes.dir}" />
        <javac srcdir="${java.main.src.dir}" destdir="${build.main.classes.dir}" fork="true" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" executable="${compile.executable}" bootclasspath="${compile.bootclasspath}" includeantruntime="false">
            <classpath>
                <fileset dir="${build.root.dir}">
                    <include name="common-domain.jar"/>
                    <include name="common-framework.jar"/>
                    <include name="common-pf.jar"/>
                    <include name="common-version.jar"/>
                    <include name="common-version-impl.jar"/>
                    <include name="server-base.jar"/>
                    <include name="server-framework.jar"/>
                    <include name="server-framework.jar"/>
                </fileset>
                <fileset dir="${nlbuildroot}/xlib/jar">
                    <include name="*.jar" />
                </fileset>
		        <path location="${build.gen.classes.dir}" />
            </classpath>
        </javac>
        
        <mkdir dir="${build.test.classes.dir}" />
        <javac srcdir="${java.test.src.dir}" destdir="${build.test.classes.dir}" fork="true" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" executable="${compile.executable}" bootclasspath="${compile.bootclasspath}" includeantruntime="false">
            <classpath>
                <fileset dir="${build.root.dir}">
                    <include name="common-domain.jar"/>
                    <include name="common-pf.jar"/>
                    <include name="common-framework.jar"/>
                    <include name="common-framework-test.jar"/>
                </fileset>
                <fileset dir="${nlbuildroot}/xlib/jar">
                    <include name="*.jar" />
                </fileset>
		        <path location="${build.main.classes.dir}" />
		        <path location="${build.gen.classes.dir}" />
            </classpath>
        </javac>
    </target>

    <target name="jar" depends="copy_resource, compile">
        <jar destfile="${build.root.dir}/orig-common-pf.jar">
	        <fileset dir="${build.main.classes.dir}" />
	        <fileset dir="${build.gen.classes.dir}" includes="**/parser/**" />
        </jar>
        <jar destfile="${build.root.dir}/policy-types.jar" basedir="${build.gen.classes.dir}" excludes="**/parser/**"/>
        <jar destfile="${build.root.dir}/common-pf-test.jar" basedir="${build.test.classes.dir}" includes="**/TestUser.class" />
    </target>

    <target name="package" depends="copy_resource, compile, jar, obfuscate_build.package">
    </target>  
</project>
